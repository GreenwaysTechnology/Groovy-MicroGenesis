Lab Setup:
.........

1.JDK 1.8
2.JAVA_HOME -  jdk/
3.Groovysdk
4.IDE 
   IntelliJ IDEA
   Groovy console.
//////////////////////////////////////////////////////////////////////////////////////////////

What is Groovy? Groovy Programming language?

 Groovy is programming language for jvm.


JVM -Java Virtual Machine - To run java applications

JVM helps to build platform indepdendent applications.

java application can be written using programming language called "Java programming language"

Java pl
 -It is high level pl
 -Object oriented Programming.

Java applications:

Editions:

-JAVA SE - Standard Edition - Core java
-JAVA EE - Enterprise edition - Server apps - web apps,Web services,databases,distributed...
-JAVA ME - Micro Edition - Mobil,card,device apps.

Java Technology created by SUN microsystem at 1989,later acquired by Oracle.
//////////////////////////////////////////////////////////////////////////////////////////

Standards organization:

C was standarized by ANSI
javascript ECMA
SQL ANSI.
.....

JAVA who is standarizing?

JCP - Java Community Process
JSR 

Core spec:
1.jvm spec

2.jse spec

3.jee spec
   servlet spec
   webservice spec

JSR-223 Spec published on may 2003 June.
JSR 223: Scripting for the JavaTM Platform

JSR-223 Objective:

Before that,
only one lanugage was there for jvm- java pl.
we can write , compile,run java programs on jvm

Groovy was the first  Scripting language for jvm ,which was created based JSR-223 Spec.
///////////////////////////////////////////////////////////////////////////////////////////

Groovy is dialect of java which is running on JVM.


                                     JAVA code  - Hello.java
					 | 
                                      java compiler-javac -Hello.class (byte code)
                                          |
                                      java Hello - Run time
					|
				    Java Runtime Env -JVM



VM Poly glot.
       
                JPL  Groovy   Kotlin   JRuby Scala 
		----------------------------------
				|
			     .class
				|
			       JVM
//////////////////////////////////////////////////////////////////////////////////////////////

Groovy is programming language inspired from java,Ruby,Javascript,Perl, Smalltalk, Objective-C


Groovy is
  -object oriented
  -functional style
  -dynamic typed
  -static typed 
  -delcarative
  -dsl
Programming language.

OO talks about How to decompose Realtime problems thinking interms objects.

...............................................................
Object oriented Concepts:
1.Abstraction
2.Encapsulation
3.Modularity
4.Hierachy
5.Typing
6.Persistency
7.Concurrency
...............................................................
functional Programming:
......................

Functional is one of the programming paradigm, which is very oldest among all Programming styles.

Groovy was the first programming language introduced funcitonal programming principles on java.

//////////////////////////////////////////////////////////////////////////////////////////

Type System in java:
....................

Java is static typed/strongly typed programming language.
   : The compiler vertifies the type of variable to test whether is comptable or not
if not compiler will throw error.

int a=10;

int is type
a is variable
10 is value

during compile time, the compiler tests whether a has proper type

int a=true;

a cant hold true, because it is boolean, the compiler verfies the type of a .

Dynamic typing:

 the compiler wont verify the type of a variable during compiletime.

Dynamic typed/weak typed programming language.

                             "Groovy can support both"
/////////////////////////////////////////////////////////////////////////////////////////////

Programming styles:
...................

1.Imperative

class Calc{
   int add(int a, int b){
      return a + b;
   }
}
Calc c=new Calc();
c.add(10,10) - 20

2.Delcarative

<h1>Hello</h1>
add 10 10 - 20

->More readable,Simple to use.

Can i write program without proper programming experience?
Yes

follow declarative programming : 

 Any one can write code.

eg:
 -Dev ops
 -scripts written using xml,json,yaml,

Programming languages:

1.GPL - General Purpose Programming language :Imperative

  The language is designed not specific to particular domain
C,C++,Java,Java Script.

2.DSL -  Domain Specific programming language.
 The language is designed for specific use case or domain.
HTML,PHP....


DLS means sepcific,declarative,easy to understand, any body can code.

                 "DSL:readable business rules in your applications"

"Groovy can help to build reusable Dsl".


DSL code:
 move left,move right, 
 take 1 cup of milk add 2 gm sugar
 shutdown machine-1 at 1 pm every day and restart after 2pm 

Machine Health Checkup:
1.find Machine at all locations
2.filter machines which are unhealthy
3.prepare report in pdf mail to healthCheckMaster@tcs.com
4.do this every day at 1pm

Groovy dsls are easy to understand by stack holders,tools users,end users,dev ops enginers.
............................................................................................

Core Features of Groovy Lanaguage:

1.Closures
2.builders
3.runtime & compile-time meta-programming
4.functional programming
5.type inference and static compilation
6.Integration with existing java stack.

//////////////////////////////////////////////////////////////////////////////////////////

Groovy Eco System:
.................
Groovy is core programming language only.

Web:
  Dynamic Web Apps | RestFull Web Services
1.Grails 
  Framework written using groovy.

Build System:
  1.ANT
  2.Maven
  3.Gradle
  4.Grape

2.Gradle
   Build system for java written in groovy

Testing Framework:
 Junit
3.Spock:
  Spock is a testing and specification framework for Java and Groovy applications. What makes it stand out from the crowd is its beautiful and highly expressive specification language.

Package Managers:

NPM - javascript
Nuget -MS .NET

4.SDKMAN!  -Groovy

5.Microservices:
 Spring with Groovy
 Micronaut  -Groovy

SOAP UI - SCRIPTS Written in groovy.
////////////////////////////////////////////////////////////////////////////////////////////

Groovy : Setup:

Groovy can be installed in many ways
...................................
1. Download a source or binary distribution.

2.Use a package manager-sdkMan or bundle for your operating system.

3.Grab the latest plugin for your IDE and follow the installation instructions.

4.Find the latest source code in the Git repo (or the GitHub mirror).

5.If you're using Docker, Groovy is available on Docker Hub.
////////////////////////////////////////////////////////////////////////////////////////////

JDK 1.8.X

Set path in env 

JAVA_HOME
  C:\Program Files\Java\jdk1.8.0_161
PATH
 C:\softwares\apache-groovy-sdk-3.0.7\groovy-3.0.7\bin


Tools provided by groovy:

1.compiler 
  groovyc
 compile groovy into .class.
2.groovy
   To run groovy code. here we dont need to compile.
  java Main  groovy Main
3.groovy console
   -Built in ide to write groovy code
4.REPL  - Read Evaulate Print Loop : Interactive cmd line tool.-groovysh : groovy shell - Wrapper to low level services.


Groovy programs are saved with "filename.groovy"

////////////////////////////////////////////////////////////////////////////////////////////

Program types:

1.Script Program
2.Class based Program

Compile And Exection Model:
groovyc  FileName.groovy ----FileName.class--load on jvm
//////////////////////////////////////////////////////////////////////////////////////////////

Lets Coding:

1.simple coding using groovy console.

2.Using idea editor

3.vs code editor.


java code

package com.mycom;

public class HelloWorld {
    public static void main(String[] args) {
        System.out.println("Hello World");
    }

}
///////////////////////////////////////////////////////////////////////////////////////////

C:\session\MicroGenesis\groovy-level-1> 

helloworld.groovy
println "Hello Groovy World"

C:\session\MicroGenesis\groovy-level-1> groovy helloworld.groovy
Hai Groovy!!!



The above code

- dont have its own class like java
- dont have main method like java
- dont have semicollons like java

Since groovy is code but how it is running?

Groovy adds automatically the below code.


What is happening after compilation?

HelloWorld.groovy

println "hello";

After compilation Groovy compiler writes a code like below

import org.codehaus.groovy.runtime.InvokerHelper;

class HelloWorld extends Script {    
                 
    def run() {                                 
  	println "hello";               
    }
    static void main(String[] args) {           
        InvokerHelper.runScript(HelloWorld, args)     
    }
}

1.The HelloWorld class extends the groovy.lang.Script class

2.groovy.lang.Script requires a run method returning a value
  the script body goes into the run method

3.the main method is automatically generated
 
4.and delegates the execution of the script on the run   method
/////////////////////////////////////////////////////////////////////////////////////////////

Groovy topics:
.............

Groovy Language:
...............

1.Language Fundamentals
2.Groovy Object orientations
3.Groovy Closures and Functional Programming
4.Groovy Meta Programming
5.Groovy DSL
6.Groovy and Builders
7.Groovy and Collections
8.Groovy and IO
    -File,
    -JSON
    -XML

/////////////////////////////////////////////////////////////////////////////////////////////


1.Language Fundamentals

1.1.Type system
1.2.literals
1.3.variables
1.4.operators
1.5.control structures
1.6.iterators/loops

Types ,literals ,variables:
.............................
Groovy is dynamic , static typed programming lanugage.

variables are other wise called as "identifiers"

syntax:

Strong typing
 
type variable=value

eg;
 int a =10;

There are two types of datatype

1.primitive  -  int,float,char,boolean....
2.complex/userdefined/ data type - Object types - Customer/Employee....
///////////////////////////////////////////////////////////////////////////////////////////

Lab:

strongtype.groovy
//Strong typing
/**
 * Primitive Types in java
 *  -integers
 *      byte
 *        -128 to 127
 *        1 byte
 *      short
 *       -32,768 to 32767
 *       2 bytes
 *      int
 *       -2Powof31 to 2powerof32
 *       4 bytes
 *       long
 *       - -2power63 to 2powerof64
 *       8 bytes
 *
 *  -float
 *     float - 4bytes
 *     double -8bytes
 *  -char
 *    char- 16 bit unicode char
 *  -boolean
 *     boolean
 *     1 bit - 0 / 1
 *
 *  Reference type/Object Types
 *  Employee e = new Employee();
 *  e - reference variable
 *  Employee - type
 *
 *  Strings are reference types
 *
 */
int a = 10;
float f = 10.5;
char c = 'A';
boolean isActive = true;
double d = 10.89;
short s = 400000;
long l = 100000000;
byte b = 900;

//Reference type
String str = "Hello Groovy";

System.out.println(" Integer " + a);
println("Float " + f);
println "Character " + c;
println "Boolean " + isActive;
println "double" + d;
println "Short " + s;
println "Long " + l;
println "byte  " + b;
println "String " + str

//////////////////////////////////////////////////////////////////////////////////////////////

Weak Typing / Dynamic Typing:
............................

The type of variable is not known during compile time.

syntax;

def identifier(variable)=value(literal)

def - keyword

//Dynamic typing

//int x=10;
//x ="hello";
def myvar = 100;
println "MyVar " + myvar;
myvar = "Hello";
println "MyVar " + myvar;
myvar = true;
println "MyVar " + myvar;
myvar = 10.6;
println "MyVar " + myvar;
myvar = 'c';
println "MyVar " + myvar;
////////////////////////////////////////////////////////////////////////////////////////////

How to know the Type of Identifier?
  
def myvar=100;

instanceof operator used to know the type of variable.

instanceof operator works only with reference types

myvar instanceof int -  compile time error

int -primitive -Reference type for Integer

java provides prmitive data eq Object type(Reference types) which are called "Wrapper Classes".
   Every prmitive type eq Reference type is there

 byte   - Byte 
  :The Byte class wraps a value of primitive type byte in an object.
 short  -  Short
 int    - Integer
 long   -Long
 float  -Float
 double -Double 
 boolean -Boolean
 char    - Character 
 NOPrimitive ------String


////////////////////////////////////////////////////////////////////////////////////////////

Code challange:
...............
In java, i want to store the below number, findout right data type.

myvariable =2232333333333333333333333333333333333331212121212092347329473433483473984732948734983473984739473498473289472394238437498479487948749387492479479347943794479;


//Identify the type of variable.
//instance of operator tells that the variable belongs to what type ?
//either byte /short/long/int.
//variableName instanceof Type

def myvar = 1;
println "My var instance of   : " + myvar instanceof Byte;
println "My var instance of   : " + myvar instanceof Short;
println "My var instance of   : " + myvar instanceof Integer;
println "My var instance of   : " + myvar instanceof Long;
println "My var instance of   : " + myvar instanceof Float;
println "My var instance of   : " + myvar instanceof Double;
println "My var instance of   : " + myvar instanceof BigInteger;
println "With out string concation"
println myvar instanceof Integer
println myvar instanceof Short
println myvar instanceof Byte
println myvar instanceof Long

println "initalizing with long numbers"
myvar = 999999999999999;
println myvar instanceof Integer
println myvar instanceof Short
println myvar instanceof Byte
println myvar instanceof Long
println "initalizing with big  numbers"
myvar = 9999999999999999777777777777777777777777777777777777777777777777777777777777777777;
println myvar instanceof Integer
println myvar instanceof Short
println myvar instanceof Byte
println myvar instanceof Long
println myvar instanceof BigInteger
/////////////////////////////////////////////////////////////////////////////////
println "String identification"
myvar = "hello world"
println myvar instanceof String;
println "Character identification"
myvar = 'A';
println myvar instanceof Character;
println myvar instanceof String;
////////////////////////////////////////////////////////////////////////////////////////////
println "Boolean identification"
myvar = true;
println myvar instanceof Boolean;
/////////////////////////////////////////////////////////////////////////////////////////////////
println "Decimal identification"
myvar = 10.89000;
println myvar instanceof Float; //false
println myvar instanceof Double; //false
println myvar instanceof BigDecimal; //true
///////////////////////////////////////////////////////////////////////////////////////////////////

Type conversion:
...............

Java : 

int a = 10;

int - type
a - variable/identifier
10- value/literal

what is type of a?
  int

how do you say type of a?
 based on type only not based on value.

Is there any type for value?

 what is type of 10 - ?

Yes!....

in Integer family : the default type of value is "int"

int a =10;

a's type is int
10's type is also int.

Type conversion :
 Converting from one type to another type.

 int to byte

Types of conversion:

 - Implicit conversion
     conversion is taken automatically.
     byte b =10;  ===byte ==int
    here 10(int) is converted into byte.   
   int b =9000; ==>int === int

 - Explicit conversion
      We need to convert manually.
  While conversion there is possibility of data loss.
   
   Syntax
 
      targettype = (targetype)sourcetype
      byte b = (byte)900;
  
      int a = 10; //10 type is int---size 4 bytes
        byte b = 19; // 19 type is ? - int only  // byte(2) === int(4)
        //byte b1 =9000; // here 9000 cant be stored inside b1 because b1 capacity is lesser than value
        //what if i want to store 9000 inside b1
        //type conversion
        byte b2 = (byte)10000;
        System.out.println(b2);

/////////////////////////////////////////////////////////////////////////////////////////////

Decimal numbers:
................
What is default type of decimals?

float price = 10.5;  // float === double === 4 bytes ===8 bytes- error

what is type of 10.5?
  double.

type conversion for floating points

ways:

1. by adding f suffix
	
        float price = 10.5f;

here 10.5(double) is converted into float.

2.by using () syntax
      float price1 = (float) 10.5;

//////////////////////////////////////////////////////////////////////////////////////////////

Characters:

the value of char type is int

        char c = 'A'; //int
        char c1 = 99; //int
        System.out.println(c1 + " " + c);
        System.out.println((char) c1 + " " + (int) c);

/////////////////////////////////////////////////////////////////////////////////////////

Groovy  Type Conversion:
//////////////////////////
Groovy mostly takes care of type conversion implicitly.

//type conversion
//int is converted to byte.
byte b = 10000;
println b;
byte b1 = (byte) 10000;
println b1;

float f = 10.5;
float f1 = 10.5f;

println f;
println f1;

//////////////////////////////////////////////////////////////////////////////////////////////////

//Dynamic typing and type conversion

def myvar = 100;
println myvar instanceof Integer /// int
//What if i want to convert into Short, i want to represent in side short/long/byte
def myvar2 = 100 as Short;
println myvar2 instanceof Integer /// int
println myvar2 instanceof Short /// int
//////////////////////////////////////////////////////////////////////////////////////////////

Other Type conversion:
......................

1.Boxing
2.Unboxing
 
Boxing and Un boxing : converting primitive to wrapper and wrapper to primitive
 Integer j = 10;
 int y = j * 10;
 System.out.println(y);

//type conversion
//int is converted to byte.
byte b = 10000;
println b;
byte b1 = (byte) 10000;
println b1;

float f = 10.5;
float f1 = 10.5f;

println f;
println f1;

//////////////////////////////////////////////////////////////////////////////////////////////////

//Dynamic typing and type conversion

def myvar = 100;
println myvar instanceof Integer /// int
//What if i want to convert into Short, i want to represent in side short/long/byte
def myvar2 = 100 as Short;
println myvar2 instanceof Integer /// int
println myvar2 instanceof Short /// int
//////////////////////////////////////////////////////////////////////////////////////////////

Integer j = 10;
int y = j * 10;
println y;

def x = 100;
def result = x * 100;
println result;

/////////////////////////////////////////////////////////////////////////////////////////////

Comments;

1.single line comment:

//

2.Muliti line comment
/*

*/

3.Groovydoc comment
 /**
 *
 *
 /

4.Shebang line

#! /user/bin/env/ groovy

  This for running script directly from the commandline in unix operating system.

///////////////////////////////////////////////////////////////////////////////////////////
                            Key words from groovy


NOte: 

 Keywords cant be used as value or variable in groovy.

 eg: 
 as, breakcase,catch,class, instance of,for, goto def, enum do, const,...........
//////////////////////////////////////////////////////////////////////////////////////////////

Coding Best practices for identifier(variable)
...............................................

- starts with letter,
- starts with $
- starts with _
- not with numbers
 
/////////////////////////////////////////////////////////////////////////////////////////////
Values:

1.Strings
























































